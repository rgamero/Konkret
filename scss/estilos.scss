@import "_variables";
@import "_reset";
@import "_mixins";


.cabecera {
  color: $c3;
  background: {
    color: $c1;
    image: url("../img/overlay.png");
  }
  text-align: center;
  height: 100vh;

  h1 {
    font: {
      family: 'Archivo Black', Helvetica, Arial, sans-serif;
      size: 5em;
    }
    position: relative;
    top: 15%;
    transform: scaleX(1);
    letter-spacing: -2px;
    -webkit-animation: shape 1.5s;
    animation: shape 1.5s;
    opacity: 1;
    @include respond-to(tabletas) {
      font-size: 4em;
    }
    @include respond-to(celulares) {
      font-size: 3.5em;
      margin-bottom: 0.5em;
    }
    @include respond-to(mincels) {
      font-size: 3.25em;
      margin-bottom: 0.5em;
      top: 10%;
    }
  }
}
@include keyframes(shape) {
  from {
    transform: scaleX(1.05);
    opacity: 0;
  }

  to {
    transform: scaleX(1);
    opacity: 1;
  }
}

.btn {
  position: relative;
  top: 4.5em;
  vertical-align: middle;
  color: $c2;
  display: block;
  left: 50%;
  width: 10em;
  transform: translate(-50%, -0%);
  line-height: 60px;
  font: {
    family: 'Oswald', Helvetica, Arial, sans-serif;
    size: 2em;
  }
  text-align: center;
  transition: 0.5s;
  padding: 0 20px;
  cursor: pointer;
  border: 2px solid $c2;
  -webkit-transition: 0.5s;
  -webkit-animation: discover 1s;
  animation: discover 1s;
  @include respond-to(celulares) {
    font-size: 1.5em;
  }
  @include respond-to(mincels) {
    font-size: 1.45em;
    top: 2.5em;
    line-height: 50px;
  }

  &:hover {
    border: 2px solid $c3;
    color: $c3;
  }

  &:hover::after,
  &:hover::before {
    -webkit-transform: scale(1);
  }

  &::after,
  &::before {
    width: 100%;
    height: 100%;
    z-index: 3;
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    box-sizing: border-box;
    -webkit-transform: scale(0);
    transition: 0.5s;
  }

  &::before {
    border-bottom: 3px solid $c3;
    border-left: 3px solid $c3;
    -webkit-transform-origin: 0 100%;
  }

  &::after {
    border-top: 3px solid $c3;
    border-right: 3px solid $c3;
    -webkit-transform-origin: 100% 0;
  }

  &:nth-child(3) {
    margin-top: 1.35em;
    width: 6em;
    font-size: 1.75em;
    @include respond-to(celulares) {
      margin-top: 0.75em;
      font-size: 1.5em;
    }
    @include respond-to(mincels) {
      font-size: 1.15em;
      margin-top: 1.2em;
    }
  }

  &:nth-child(3):hover {
    background: $c3;
    color: $c1;
  }
}
@include keyframes(discover) {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}
// Login
.login {
  font: {
    family: 'Oswald', Helvetica, Arial, sans-serif;
    size: 100%;
  }
  position: relative;
  top: 9em;
  width: 275px;
  display: none;
  margin: auto;
  @include respond-to(mincels) {
    top: 4.5em;
    width: 15em;
  }
  @include respond-to(celulares) {
    top: 8em;
  }
}

.arrow-up {
  width: 0;
  height: 0;
  border: {
    left: 20px solid transparent;
    right: 20px solid transparent;
    bottom: 15px solid $c4;
  }
  left: 50%;
  transform: translateX(-50%);
  position: absolute;
  top: -10px;
}

.formholder {
  background: $c4;
  width: 100%;
  border-radius: 5px;
  padding-top: 5px;

  .randompad {
    padding: 10px;

    form {
      border: none;
      @include respond-to(mincels) {
        font-size: 99%;
      }

      .input__label {
        width: calc(100% - 2em);
        font: {
          weight: 300;
          size: 70%;
        }
        @include respond-to(mincels) {
          font-size: 60%;
        }
      }

      .input__field {
        padding: 0.6em;
      }

      input[type="submit"] {
        border: 2px solid $c2;
        border-radius: 5px;
        background-color: transparent;
        padding: 10px;
        font: {
          family: 'Oswald', Helvetica, Arial, sans-serif;
          size: 100%;
        }
        display: block;
        width: 70%;
        cursor: pointer;
        margin: 5px auto auto;
        color: $c2;
        -webkit-transition: 0.4s;
        transition: 0.4s;
        @include respond-to(mincels) {
          margin-top: 0;
        }

        &:focus {
          outline: none;
        }

        &:hover {
          background-color: $c3;
          color: $c1;
        }
      }
    }
  }
}
// Form
.content {
  font: {
    family: 'Oswald', Helvetica, Arial, sans-serif;
    size: 120%;
  }
  background: {
    color: $c3;
    image: url("../img/overlay.png");
  }
  text-align: center;
  color: $c1;
  height: 100vh;
  @include respond-to(mincels) {
    min-height: 115vh;
  }

  h2 {
    font-size: 2em;
    padding-top: 1.25em;
    @include respond-to(celulares) {
      font-size: 1.5em;
    }
    @include respond-to(mincels) {
      font-size: 1.75em;
      padding-top: 0.75em;
    }
  }
}

.input {
  position: relative;
  z-index: 1;
  display: inline-block;
  margin: 1em;
  max-width: 350px;
  width: calc(100% - 2em);
  vertical-align: top;

  &:last-child {
    display: block;
    margin: auto;
  }
  @include respond-to(tabletas) {
    margin: 0.5em;
  }
}

.input__field {
  position: relative;
  left: 0.75em;
  display: block;
  float: none;
  padding: 0.8em;
  width: 82.5%;
  border: none;
  border-radius: 0;
  background: transparent;
  color: #f5f5f5;
  font: {
    weight: 300;
    family: "Oswald", Helvetica, Arial, sans-serif;
  }
  line-height: 1.25;
  letter-spacing: 0.25px;
  -webkit-appearance: none;
  /* for box shadows to show on iOS */
  z-index: 10;
  opacity: 0;
  -webkit-transition: opacity 0.4s;
  transition: opacity 0.4s;

  &:invalid {
    box-shadow: none;
  }

  &:-moz-submit-invalid {
    box-shadow: none;
  }

  &:-moz-ui-invalid {
    box-shadow: none;
  }
  @include respond-to(celulares) {
    left: 0.5em;
    top: 0.35em;
  }

  &:focus {
    outline: none;
  }
}

.input__label {
  display: inline-block;
  float: none;
  width: 90%;
  color: $c2;
  font-weight: 600;
  font-size: 75%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  position: relative;
  text-align: center;
  @include respond-to(tabletas) {
    width: 90%;
  }
  @include respond-to(celulares) {
    width: 90%;
  }

  &::before {
    content: '';
    position: absolute;
    bottom: 100%;
    left: 0;
    width: 100%;
    height: 3.75em;
    background: $c2;
    -webkit-transform: perspective(1000px) rotate3d(1, 0, 0, 90deg);
    transform: perspective(1000px) rotate3d(1, 0, 0, 90deg);
    @include respond-to(celulares) {
      height: 2.75em;
    }
    @include trans;
  }

  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 0.25em;
    background: $c2;
    @include trans;
  }

  textarea + &::before {
    height: 10.75em;
    @include respond-to(celulares) {
      height: 9.25em;
    }
  }
}

.input__label-content {
  position: relative;
  display: block;
  padding: 0.75em 0;
  width: 100%;
  font-size: 1.25em;
  @include respond-to(celulares) {
    padding: 0.5em 0;
  }
}

.input--filled .input__field,
.input__field:focus {
  opacity: 1;
  -webkit-transition-delay: 0.4s;
  transition-delay: 0.4s;
}

.input--filled .input__label::before,
.input__field:focus + .input__label::before {
  -webkit-transform: perspective(1000px) rotate3d(1, 0, 0, 0deg);
  transform: perspective(1000px) rotate3d(1, 0, 0, 0deg);
}

.input--filled .input__label,
.input__field:focus + .input__label {
  pointer-events: none;
}

.input--filled .input__label::after,
.input__field:focus + .input__label::after {
  -webkit-transform: perspective(1000px) rotate3d(1, 0, 0, -90deg);
  transform: perspective(1000px) rotate3d(1, 0, 0, -90deg);
}

form {
  button[type="submit"] {
    border: 2px solid $c2;
    border-radius: 5px;
    background-color: transparent;
    padding: 10px;
    font: {
      family: 'Oswald', Helvetica, Arial, sans-serif;
      size: 100%;
    }
    display: block;
    width: 15%;
    cursor: pointer;
    margin: 5px auto auto;
    color: $c2;
    -webkit-transition: 0.4s;
    transition: 0.4s;
    @include respond-to(tabletas) {
      width: 40%;
    }
    @include respond-to(celulares) {
      width: 70%;
    }
    @include respond-to(mincels) {
      width: 80%;
    }

    &:focus {
      outline: none;
    }

    &:hover {
      background-color: $c3;
      color: $c1;
    }
  }
}
